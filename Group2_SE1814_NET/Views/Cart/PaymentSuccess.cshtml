@{
    ViewData["Title"] = "Thanh toán thành công";

    // Lấy orderId từ TempData nếu có
    int orderId = 0;
    if (TempData.ContainsKey("ProcessedOrderId"))
    {
        orderId = (int)TempData["ProcessedOrderId"];
        // Giữ giá trị TempData cho request tiếp theo nếu cần
        TempData.Keep("ProcessedOrderId");
    }
}

<div class="payment-success-container">
    <div class="success-card">
        <div class="success-icon">
            <i class="fa fa-check-circle"></i>
        </div>
        <h2 class="success-title">Thanh toán thành công!</h2>
        <div class="success-message">
            <p>Cảm ơn bạn đã mua hàng. Đơn hàng của bạn đang được xử lý.</p>
            <p>Bạn sẽ được chuyển hướng tự động sau <span id="countdown">5</span> giây...</p>
        </div>
        <div class="action-buttons">
            <a href="@Url.Action("Index", "Home")" class="btn btn-secondary">Quay lại trang chủ</a>
            @if (orderId > 0)
            {
                <a href="@Url.Action("CheckoutWithCOD", "Cart", new { orderId = orderId })" class="btn btn-primary" id="continueBtn">Tiếp tục</a>
            }
            else
            {
                <a href="@Url.Action("Index", "Home")" class="btn btn-primary" id="continueBtn">Tiếp tục</a>
            }
        </div>
    </div>
</div>

<style>
    .payment-success-container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 60vh;
        padding: 20px;
    }

    .success-card {
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        padding: 30px;
        text-align: center;
        max-width: 500px;
        width: 100%;
    }

    .success-icon {
        margin-bottom: 20px;
    }

        .success-icon i {
            font-size: 70px;
            color: #28a745;
        }

    .success-title {
        color: #28a745;
        margin-bottom: 20px;
        font-weight: 600;
    }

    .success-message {
        margin-bottom: 25px;
        color: #555;
        font-size: 16px;
    }

    .action-buttons {
        display: flex;
        justify-content: center;
        gap: 15px;
        margin-top: 20px;
    }

    .btn {
        padding: 10px 25px;
        border-radius: 5px;
        text-decoration: none;
        font-weight: 500;
        transition: all 0.3s ease;
    }

    .btn-primary {
        background-color: #007bff;
        color: white;
        border: 1px solid #007bff;
    }

        .btn-primary:hover {
            background-color: #0069d9;
            border-color: #0062cc;
        }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
        border: 1px solid #6c757d;
    }

        .btn-secondary:hover {
            background-color: #5a6268;
            border-color: #545b62;
        }

    #countdown {
        font-weight: bold;
    }
</style>

<script>
    // Script để đếm ngược và tự động chuyển hướng
    document.addEventListener("DOMContentLoaded", function () {
        let seconds = 5;
        const countdownElement = document.getElementById('countdown');

        // Sử dụng orderId nếu có, nếu không thì chuyển về trang chủ
    @if (orderId > 0)
    {
        <text>
                    const redirectUrl = '@Url.Action("CheckoutWithCOD", "Cart", new { orderId = orderId })';
        </text>
    }
    else
    {
        <text>
                    const redirectUrl = '@Url.Action("Index", "Home")';
        </text>
    }

            const timer = setInterval(function () {
            seconds--;
            countdownElement.textContent = seconds;

            if (seconds <= 0) {
                clearInterval(timer);
                window.location.href = redirectUrl;
            }
        }, 1000);

        // Cho phép người dùng click vào nút tiếp tục để chuyển hướng ngay lập tức
        document.getElementById('continueBtn').addEventListener('click', function (e) {
            clearInterval(timer);
        });
    });
</script>